import { KPICard } from "@/components/shared/kpi-card";
import { InsightCard } from "@/components/shared/insight-card";
import { Card, CardContent, CardHeader, CardTitle } from "@/components/ui/card";
import { Button } from "@/components/ui/button";
import { DollarSign, ShoppingCart, RefreshCw, TrendingUp, Activity, FileText } from "lucide-react";
import jsPDF from "jspdf";
import { useAuth } from "@/hooks/use-auth";
import { useQuery } from "@tanstack/react-query";

interface BusinessPulsePanelProps {
  className?: string;
}

export function BusinessPulsePanel({ className }: BusinessPulsePanelProps) {
  const { user } = useAuth();
  
  // Fetch platform connections data
  const { data: platformConnections } = useQuery({
    queryKey: ["/api/platforms/connections"],
    enabled: !!user,
  });

  const canDownloadAISummary = user && (user.role === "admin" || user.role === "manager");

  const downloadAISummary = () => {
    const doc = new jsPDF();
    const today = new Date().toLocaleDateString();
    
    // Header
    doc.setFontSize(20);
    doc.text("AI Business Summary Report", 20, 30);
    doc.setFontSize(12);
    doc.text(`Generated on: ${today}`, 20, 45);
    doc.text(`Company: ${user?.companyName || 'N/A'}`, 20, 55);
    
    // Business Pulse Overview
    doc.setFontSize(16);
    doc.text("Business Pulse Overview", 20, 75);
    doc.setFontSize(10);
    doc.text("• Total Sales: $127,450 (↑12.5%)", 25, 90);
    doc.text("• Orders: 2,847 (↑8.2%)", 25, 100);
    doc.text("• Refunds: $3,240 (↓2.1%)", 25, 110);
    doc.text("• ROI: 24.6% (↑5.4%)", 25, 120);
    
    // Forecast Summary
    doc.setFontSize(16);
    doc.text("AI Forecast Summary", 20, 140);
    doc.setFontSize(10);
    doc.text("• Expected 18% sales increase in next 2 weeks", 25, 155);
    doc.text("• Electronics category showing 23% outperformance", 25, 165);
    doc.text("• Inventory restock recommended for top SKUs", 25, 175);
    doc.text("• Seasonal trends indicate Q1 growth opportunity", 25, 185);
    
    // AI Recommendations
    doc.setFontSize(16);
    doc.text("AI Recommendations", 20, 205);
    doc.setFontSize(10);
    doc.text("1. Increase inventory for electronics category by 25%", 25, 220);
    doc.text("2. Implement dynamic pricing for high-velocity items", 25, 230);
    doc.text("3. Focus marketing spend on top-performing channels", 25, 240);
    doc.text("4. Consider expanding product line in trending categories", 25, 250);
    
    // Platform Connection Status
    doc.setFontSize(16);
    doc.text("Platform Connection Status", 20, 270);
    doc.setFontSize(10);
    if (platformConnections && Object.keys(platformConnections).length > 0) {
      let yPos = 285;
      Object.entries(platformConnections).forEach(([platform, data]: [string, any]) => {
        const status = data.connected ? "✓ Connected" : "✗ Disconnected";
        doc.text(`• ${platform.charAt(0).toUpperCase() + platform.slice(1)}: ${status}`, 25, yPos);
        yPos += 10;
      });
    } else {
      doc.text("• No platform connections configured", 25, 285);
    }

    // Footer
    doc.setFontSize(8);
    doc.text("Generated by AI Business Intelligence Dashboard", 20, 290);
    
    // Download
    const filename = `ai_summary_${new Date().toISOString().split('T')[0]}.pdf`;
    doc.save(filename);
  };
  // Mock data - in real app, this would come from API
  const kpiData = [
    {
      title: "Total Sales",
      value: "$127,450",
      change: { value: 12.5, isPositive: true },
      icon: DollarSign,
      iconColor: "text-primary"
    },
    {
      title: "Orders",
      value: "2,847",
      change: { value: 8.2, isPositive: true },
      icon: ShoppingCart,
      iconColor: "text-blue-400"
    },
    {
      title: "Refunds",
      value: "$3,240",
      change: { value: -2.1, isPositive: false },
      icon: RefreshCw,
      iconColor: "text-yellow-400"
    },
    {
      title: "ROI",
      value: "24.6%",
      change: { value: 5.4, isPositive: true },
      icon: TrendingUp,
      iconColor: "text-primary"
    }
  ];

  const insights = [
    {
      title: "Sales Momentum",
      insight: "Your electronics category is outperforming by 23% this week. Consider increasing inventory for top-selling SKUs.",
      type: "positive" as const,
      confidence: 92
    },
    {
      title: "Seasonal Pattern",
      insight: "Historical data suggests 18% sales increase expected in the next 2 weeks. Prepare inventory accordingly.",
      type: "neutral" as const,
      confidence: 87
    }
  ];

  return (
    <Card className={`dashboard-card ${className}`}>
      <CardHeader>
        <div className="flex items-center justify-between">
          <CardTitle className="flex items-center space-x-2">
            <Activity className="h-5 w-5 text-primary" />
            <span>Business Pulse</span>
          </CardTitle>
          {canDownloadAISummary && (
            <Button 
              size="sm" 
              variant="outline"
              onClick={downloadAISummary}
              className="text-primary border-primary hover:bg-primary hover:text-primary-foreground"
            >
              <FileText className="h-4 w-4 mr-2" />
              Download AI Summary
            </Button>
          )}
        </div>
      </CardHeader>
      <CardContent className="dashboard-panel">
        {/* KPI Cards Grid */}
        <div className="grid grid-cols-2 lg:grid-cols-4 gap-4">
          {kpiData.map((kpi, index) => (
            <KPICard key={index} {...kpi} />
          ))}
        </div>

        {/* Weekly Trends Chart */}
        <div className="chart-container">
          <h3 className="text-lg font-semibold text-foreground mb-4">7-Day Sales Trend</h3>
          <div className="h-40 flex items-end justify-between space-x-2">
            {/* Simple bar chart representation */}
            {[65, 78, 52, 89, 95, 71, 83].map((height, index) => (
              <div key={index} className="flex flex-col items-center flex-1">
                <div 
                  className="w-full bg-primary/80 rounded-t transition-all hover:bg-primary"
                  style={{ height: `${height}%` }}
                />
                <span className="text-xs text-muted-foreground mt-2">
                  {['Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat', 'Sun'][index]}
                </span>
              </div>
            ))}
          </div>
          <div className="flex justify-between text-xs text-muted-foreground mt-2">
            <span>$0</span>
            <span>$50k</span>
          </div>
        </div>

        {/* AI Insights */}
        <div className="space-y-3">
          <h4 className="text-sm font-medium text-foreground">AI Insights</h4>
          {insights.map((insight, index) => (
            <InsightCard key={index} {...insight} />
          ))}
        </div>
      </CardContent>
    </Card>
  );
}